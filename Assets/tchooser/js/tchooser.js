// Generated by CoffeeScript 1.6.3
(function() {
  var TChooser;

  TChooser = (function() {
    TChooser.prototype.menu = [];

    function TChooser(opts) {
      var _this = this;
      this.opts = opts;
      if (this.opts.ajax) {
        $.getJSON(this.opts.ajax, function(options) {
          return _this.showMenu(options);
        });
      } else {
        this.showMenu(this.opts.options);
      }
    }

    TChooser.prototype.showMenu = function(options) {
      var $menu;
      this.dialog = $('<div/>');
      $menu = this.renderOptions(options);
      this.dialog.append($menu);
      this.menu.push($menu);
      return this.open();
    };

    TChooser.prototype.open = function() {
      var h, w;
      w = $(window).width();
      h = $(window).height();
      return this.dialog.dialog({
        width: w - 200,
        height: h - 100
      });
    };

    TChooser.prototype.close = function() {
      return this.dialog.dialog('close');
    };

    TChooser.prototype.currentMenu = function() {
      if (this.menu) {
        return this.menu[this.menu.length - 1];
      }
    };

    TChooser.prototype.renderOptions = function(options) {
      var $btn, $menuWrapper, $ul, item, self, _fn, _i, _len;
      self = this;
      $menuWrapper = $('<div/>').addClass('chooser-menu').css({
        position: 'absolute',
        height: '95%'
      });
      if (self.currentMenu()) {
        $btn = $('<a/>').addClass('btn back-btn').html('Back').click(function() {
          var $topMenu;
          $topMenu = self.menu.pop();
          $topMenu.css('zIndex', 3).hide('slide', {
            direction: 'right'
          }, function() {
            return $topMenu.remove();
          });
          return self.currentMenu().show();
        });
        $menuWrapper.append($btn);
      }
      $ul = $('<ul/>').appendTo($menuWrapper);
      _fn = function(item) {
        var $li, $menuItem;
        $li = $('<li/>').addClass('option').click(function(e) {
          return $(this).find('a').triggerHandler('click');
        }).mouseover(function(e) {
          return $(this).addClass('option-hover');
        }).mouseout(function(e) {
          return $(this).removeClass('option-hover');
        });
        $li.appendTo($ul);
        $menuItem = $('<a/>').html(item.label);
        $menuItem.appendTo($li);
        if (item.options && item.options.length > 0) {
          $li.addClass('option-category');
          $('<div/>').addClass('next-icon').appendTo($li);
          $menuItem.data('options', item.options);
          return $menuItem.click(function(e) {
            var $newMenu, $prevMenu;
            e.stopPropagation();
            $prevMenu = self.currentMenu();
            $newMenu = self.renderOptions($(this).data('options'));
            self.menu.push($newMenu);
            $prevMenu.css({
              zIndex: -3
            });
            return $newMenu.css({}).hide().appendTo(self.dialog).show('slide', {
              direction: 'right'
            }, function() {
              return $prevMenu.hide().css({
                zIndex: 0
              });
            });
          });
        } else if (item.value) {
          $li.addClass('option-item');
          return $menuItem.click(function(e) {
            if (self.opts.onChoose) {
              self.opts.onChoose.apply(self, [e, item.value]);
            }
            return self.close();
          });
        }
      };
      for (_i = 0, _len = options.length; _i < _len; _i++) {
        item = options[_i];
        _fn(item);
      }
      return $menuWrapper;
    };

    return TChooser;

  })();

  window.TChooser = TChooser;

  /*
  $(document.body).ready ->
    chooser = new TChooser({
      onChoose: (el) ->
  
      options: [
        {
          label: "Category I"
          options: [
            { label: "Product I", value: 1}
            { label: "Product II", value: 2 }
            { label: "Product III", value: 3 }
            { label: "SubCategory I", options: [
              { label: "Product A.1", value: 7 }
              { label: "Product A.2", value: 8 }
              { label: "Product A.3", value: 9 }
            ]}
          ]
        },
        {
          label: "Category II"
          options: [
            { label: "Product A", value: 1}
            { label: "Product B", value: 2 }
            { label: "Product C", value: 3 }
          ]
        }
      ]
    })
    chooser.open()
    window.chooser = chooser
  */


}).call(this);
