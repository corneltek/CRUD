// Generated by CoffeeScript 1.9.3

/*
vim:sw=2:ts=2:sts=2:
 */

(function() {
  var CRUD;

  if (typeof window.Phifty === "undefined") {
    window.Phifty = {};
  }

  if (typeof window.CRUD === "undefined") {
    window.CRUD = {};
  }

  CRUD = Phifty.CRUD = {
    closeEditRegion: function(el) {
      var r;
      r = Region.of(el);
      if ($.scrollTo) {
        return $.scrollTo(r.getEl().parent(), 100, function() {
          return r.remove();
        });
      } else {
        return r.remove();
      }
    },
    initEditRegion: function($el, opts) {
      var actionOptions;
      $(document.body).trigger('phifty.region_load');
      opts = $.extend({
        removeRegion: true
      }, opts);
      if (opts.defaultTinyMCE) {
        use_tinymce('adv1');
      }
      actionOptions = $.extend({
        clear: false,
        onSuccess: function(resp) {
          var r, self;
          self = this;
          if (opts.removeRegion) {
            r = Region.of(self.form());
            if (r) {
              if (r.triggerElement) {
                Region.of(r.triggerElement).refresh();
              }
              return r.remove();
            }
          }
        }
      }, opts.actionOptions || {});
      return $el.find('.ajax-action').each(function(i, f) {
        var a;
        a = Action.form(f, actionOptions);
        if (opts.setupAction) {
          return opts.setupAction(a);
        }
      });
    },

    /*
    $imageCover = AdminUI.createImageCover { image:..., thumb: ..., title:...  },
      onClose: (e) ->
        runAction 'Product::Action::DeleteProductImage',
          { id: data.id },
          { confirm: '確認刪除? ', remove: this }
     */
    createImageCover: function(opts) {
      var $a, $close, $cut, $image, $imageCover, $title;
      $imageCover = $('<div/>').addClass('image-cover');
      $a = $('<a/>').attr({
        target: '_blank',
        href: '/' + opts.image
      });
      if (opts.thumb) {
        $image = $('<img/>').attr({
          src: '/' + opts.thumb
        }).appendTo($a);
      }
      $cut = $('<div/>').addClass('cut').append($a).appendTo($imageCover);
      $title = $('<div/>').addClass('title').html(opts.title || '未命名').appendTo($imageCover);
      if (opts.onClose) {
        $close = $('<div/>').addClass('close').click(function() {
          return opts.onClose.call($imageCover);
        });
        $close.appendTo($imageCover);
      }
      if ($a.facebox) {
        $a.facebox({
          closeImage: '/assets/facebox/src/closelabel.png',
          loadingImage: '/assets/facebox/src/loading.gif'
        });
      }
      return $imageCover;
    },
    createTag: function(settings) {
      var $name, $tag;
      $tag = $('<div/>').addClass('tag');
      $name = $('<div/>').addClass('label').html(settings.label).appendTo($tag);
      if (settings.onRemove) {
        $('<i/>').addClass('control fa fa-remove').click(settings.onRemove).appendTo($tag);
      }
      return $tag;
    },
    createTextTag: function(data, options) {
      var $close, $name, $tag;
      $tag = $('<div/>').addClass('text-tag');
      $name = $('<div/>').addClass('name').html(data.title || data.name).appendTo($tag);
      if (options.onClose) {
        $close = $('<i/>').addClass('fa fa-remove').click(options.onClose);
        $close.appendTo($tag);
      }
      return $tag;
    },
    createResourceCover: function(data, opts) {
      var $a, $close, $preview, $tag, e;
      $tag = $('<div/>').addClass('resource');
      $preview = $('<div/>').appendTo($tag);
      if (data.url) {
        try {
          $preview.oembed(data.url, {
            maxHeight: 300,
            maxWidth: 300
          });
        } catch (_error) {
          e = _error;
          if (window.console) {
            console.error(e);
          }
          $a = $('<a/>').attr({
            target: '_blank',
            href: data.url
          });
          $a.html(data.url);
          $preview.html($a);
        }
      } else if (data.html) {
        $preview.html(data.html);
      }
      if (opts.onClose) {
        $close = $('<div/>').addClass('close');
        $close.click(function(e) {
          return opts.onClose.call($tag, e);
        });
        $close.appendTo($tag);
      }
      return $tag;
    },
    createFileCover: function(data) {
      var $icon, $name, $tag;
      $tag = $('<div/>').addClass('product-file');
      $name = $('<a/>').addClass('name').attr({
        target: '_blank',
        href: '/' + data.file
      }).html(data.title || data.file.split('/').pop());
      $icon = $('<div/>');
      if (data.mimetype === 'application/pdf' || data.mimetype === 'application/msword' || data.mimetype === 'text/plain' || data.mimetype === 'text/html') {
        $icon.addClass('ui-' + data.mimetype.replace('/', '-') + '-32');
      } else {
        $icon.addClass('ui-unknown-32');
      }
      $icon.appendTo($tag);
      $tag.append($name);
      return $tag;
    }
  };

}).call(this);
